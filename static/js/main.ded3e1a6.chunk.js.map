{"version":3,"sources":["Footer.js","Home.js","Palindrome.js","Register.js","Header.js","App.js","index.js"],"names":["Footer","getYear","Date","getFullYear","Navbar","expand","variant","bg","fixed","Container","Brand","className","Component","Home","Palindrome","props","state","enteredWord","originalWord","reverseWord","displayResult","isPalindrome","handleChange","bind","handleSubmit","event","this","setState","target","value","split","reverse","join","checkPhrase","preventDefault","Jumbotron","Form","onSubmit","Group","controlId","Control","type","placeholder","onChange","pattern","Button","Row","Col","Register","onChangeHandler","nam","name","val","onCheckboxHandler","coffeeCheckbox","onRadioHandler","nr","radioPet","onSelectionHandler","ausState","onSubmitHandler","alert","baseState","resetToTop","firstLastName","phoneNumber","email","address1","address2","city","color","zip","window","scrollTo","Label","autoFocus","maxLength","required","as","Check","inline","label","checked","size","block","onClick","onResetHandler","Header","exact","href","Toggle","aria-controls","Collapse","id","Nav","Link","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"sQAsBeA,E,uKAfP,IACIC,GADU,IAAIC,MACIC,cAEtB,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,KAAKC,QAAQ,OAAOC,GAAG,OAAOC,MAAM,UAC/C,kBAACC,EAAA,EAAD,KACI,kBAACL,EAAA,EAAOM,MAAR,CAAcC,UAAU,UAAxB,qBACyBV,S,GATxBW,aCUNC,E,uKARP,OACI,kBAACJ,EAAA,EAAD,KACI,yC,GALGG,a,+CC2FJE,G,wDArFX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,eAAe,EACfC,cAAc,GAGlB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAXL,E,yDAcNE,GACTC,KAAKC,SAAS,CAAEV,YAAaQ,EAAMG,OAAOC,U,kCAGlCZ,GACR,IAAIC,EAAeD,EACDA,EAAYa,MAAM,IAAIC,UAAUC,KAAK,MAEnCd,GAEhBQ,KAAKC,SAAS,CAAEN,cAAc,IAC9BK,KAAKC,SAAS,CAAEP,eAAe,MAI/BM,KAAKC,SAAS,CAAEN,cAAc,IAC9BK,KAAKC,SAAS,CAAEP,eAAe,O,mCAI1BK,GACTC,KAAKO,YAAYP,KAAKV,MAAMC,aAC5BS,KAAKC,SAAS,CAAEV,YAAa,KAC7BQ,EAAMS,mB,+BAKN,OACI,kBAACC,EAAA,EAAD,KACI,kDACA,iFAEI,6BAFJ,0EAGI,6BAHJ,6EAKA,kBAACC,EAAA,EAAD,CAAMC,SAAUX,KAAKF,cACjB,kBAACY,EAAA,EAAKE,MAAN,CAAYC,UAAU,kBAClB,kBAACH,EAAA,EAAKI,QAAN,CACIC,KAAK,OACLC,YAAY,eACZb,MAAOH,KAAKV,MAAMC,YAClB0B,SAAUjB,KAAKJ,aACfsB,QAAQ,cAEZ,6BACA,kBAACC,EAAA,EAAD,CAAQvC,QAAQ,UAAUmC,KAAK,UAA/B,UAGA,6BACA,8BAE6B,IAA5Bf,KAAKV,MAAMK,eAAsD,IAA7BK,KAAKV,MAAMI,eAC5C,kBAAE0B,EAAA,EAAF,CAAMnC,UAAU,sBACZ,kBAACoC,EAAA,EAAD,2CAIqB,IAA5BrB,KAAKV,MAAMK,eAAuD,IAA7BK,KAAKV,MAAMI,eAC7C,kBAAC0B,EAAA,EAAD,CAAKnC,UAAU,uBACX,kBAACoC,EAAA,EAAD,gD,GA3EPnC,c,QCsOVoC,E,kDAtOX,WAAYjC,GAAQ,IAAD,8BACf,cAAMA,IAqBVkC,gBAAkB,SAACxB,GACf,IAAIyB,EAAMzB,EAAMG,OAAOuB,KACnBC,EAAM3B,EAAMG,OAAOC,MACvB,EAAKF,SAAL,eAAiBuB,EAAME,KAzBR,EA4BnBC,kBAAoB,WAChB,EAAK1B,SAAS,CACV2B,gBAAiB,EAAKtC,MAAMsC,kBA9BjB,EAkCnBC,eAAiB,SAAAC,GAAE,OAAI,WACnB,EAAK7B,SAAS,CACV8B,SAAUD,MApCC,EAwCnBE,mBAAqB,SAACjC,GAClB,EAAKE,SAAS,CAAEgC,SAAUlC,EAAMG,OAAOC,SAzCxB,EA4CnB+B,gBAAkB,SAACnC,GACfoC,MAAM,qCACN,EAAKlC,SAAS,EAAKmC,WACnB,EAAKC,aACLtC,EAAMS,kBA9CN,EAAKlB,MAAQ,CACTgD,cAAe,GACfC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,KAAM,GACNV,SAAU,MACVW,MAAO,GACPC,IAAK,GACLd,SAAU,GACVH,gBAAgB,GAEpB,EAAKQ,UAAY,EAAK9C,MAfP,E,yDAmBfwD,OAAOC,SAAS,EAAG,K,+BAkCnB,OACI,kBAAChE,EAAA,EAAD,CAAWE,UAAU,cACjB,6BACA,wCACA,6BACA,kBAACyB,EAAA,EAAD,CAAMC,SAAUX,KAAKkC,iBACjB,kBAACxB,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAClB,kBAACH,EAAA,EAAKsC,MAAN,kBACA,kBAACtC,EAAA,EAAKI,QAAN,CACImC,WAAS,EACTlC,KAAK,OACLC,YAAY,sBACZS,KAAK,gBACLtB,MAAOH,KAAKV,MAAMgD,cAClBrB,SAAUjB,KAAKuB,gBACf2B,UAAW,GACXC,UAAQ,KAIhB,kBAACzC,EAAA,EAAKU,IAAN,KACI,kBAACV,EAAA,EAAKE,MAAN,CAAYwC,GAAI/B,IAAKR,UAAU,mBAC3B,kBAACH,EAAA,EAAKsC,MAAN,qBACA,kBAACtC,EAAA,EAAKI,QAAN,CACIC,KAAK,MACLG,QAAQ,YACRgC,UAAW,GACXlC,YAAY,eACZS,KAAK,cACLtB,MAAOH,KAAKV,MAAMiD,YAClBtB,SAAUjB,KAAKuB,gBACf4B,UAAQ,KAIhB,kBAACzC,EAAA,EAAKE,MAAN,CAAYwC,GAAI/B,IAAKR,UAAU,aAC3B,kBAACH,EAAA,EAAKsC,MAAN,cACA,kBAACtC,EAAA,EAAKI,QAAN,CACIC,KAAK,QACLC,YAAY,gBACZS,KAAK,QACLtB,MAAOH,KAAKV,MAAMkD,MAClBvB,SAAUjB,KAAKuB,gBACf2B,UAAW,GACXC,UAAQ,MAKpB,kBAACzC,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAClB,kBAACH,EAAA,EAAKsC,MAAN,kBACA,kBAACtC,EAAA,EAAKI,QAAN,CACIE,YAAY,YACZS,KAAK,WACLtB,MAAOH,KAAKV,MAAMmD,SAClBxB,SAAUjB,KAAKuB,gBACf2B,UAAW,GACXC,UAAQ,KAIhB,kBAACzC,EAAA,EAAKE,MAAN,CAAYC,UAAU,gBAClB,kBAACH,EAAA,EAAKsC,MAAN,kBACA,kBAACtC,EAAA,EAAKI,QAAN,CACIE,YAAY,YACZS,KAAK,WACLtB,MAAOH,KAAKV,MAAMoD,SAClBzB,SAAUjB,KAAKuB,gBACf2B,UAAW,MAInB,kBAACxC,EAAA,EAAKU,IAAN,KACI,kBAACV,EAAA,EAAKE,MAAN,CAAYwC,GAAI/B,IAAKR,UAAU,YAC3B,kBAACH,EAAA,EAAKsC,MAAN,aACA,kBAACtC,EAAA,EAAKI,QAAN,CACIC,KAAK,OACLC,YAAY,OACZS,KAAK,OACLtB,MAAOH,KAAKV,MAAMqD,KAClB1B,SAAUjB,KAAKuB,gBACf4B,UAAQ,KAIhB,kBAACzC,EAAA,EAAKE,MAAN,CAAYwC,GAAI/B,IAAKR,UAAU,aAC3B,kBAACH,EAAA,EAAKsC,MAAN,cACA,kBAACtC,EAAA,EAAKI,QAAN,CACIsC,GAAG,SACHjD,MAAOH,KAAKV,MAAM2C,SAClBhB,SAAUjB,KAAKgC,mBACfmB,UAAQ,GAER,4BAAQhD,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,QAIR,kBAACO,EAAA,EAAKE,MAAN,CAAYwC,GAAI/B,IAAKR,UAAU,WAC3B,kBAACH,EAAA,EAAKsC,MAAN,YACA,kBAACtC,EAAA,EAAKI,QAAN,CACIC,KAAK,MACLG,QAAQ,WACRgC,UAAW,EACXlC,YAAY,MACZS,KAAK,MACLtB,MAAOH,KAAKV,MAAMuD,IAClB5B,SAAUjB,KAAKuB,gBACf4B,UAAQ,MAKpB,kBAACzC,EAAA,EAAKU,IAAN,KACI,kBAACV,EAAA,EAAKsC,MAAN,sCACA,yBAAK/D,UAAU,QACX,kBAACyB,EAAA,EAAK2C,MAAN,CACIC,QAAM,EACNC,MAAM,OACNxC,KAAK,QACLyC,QAAiC,IAAxBxD,KAAKV,MAAMyC,SACpBd,SAAUjB,KAAK6B,eAAe,KAElC,kBAACnB,EAAA,EAAK2C,MAAN,CACIC,QAAM,EACNC,MAAM,OACNxC,KAAK,QACLyC,QAAiC,IAAxBxD,KAAKV,MAAMyC,SACpBd,SAAUjB,KAAK6B,eAAe,KAElC,kBAACnB,EAAA,EAAK2C,MAAN,CACIC,QAAM,EACNC,MAAM,OACNxC,KAAK,QACLyC,QAAiC,IAAxBxD,KAAKV,MAAMyC,SACpBd,SAAUjB,KAAK6B,eAAe,KAElC,kBAACnB,EAAA,EAAK2C,MAAN,CACIC,QAAM,EACNC,MAAM,UACNxC,KAAK,QACLyC,QAAiC,IAAxBxD,KAAKV,MAAMyC,SACpBd,SAAUjB,KAAK6B,eAAe,OAK1C,kBAACnB,EAAA,EAAKE,MAAN,KACI,kBAACF,EAAA,EAAK2C,MAAN,CACIE,MAAM,sBACN9B,KAAK,iBACL+B,QAASxD,KAAKV,MAAMsC,eACpBX,SAAUjB,KAAK2B,qBAIvB,oCACI,kBAACR,EAAA,EAAD,CAAQvC,QAAQ,UAAU6E,KAAK,KAAKC,OAAK,EAAC3C,KAAK,UAA/C,UAGA,kBAACI,EAAA,EAAD,CAAQvC,QAAQ,YAAY6E,KAAK,KAAKC,OAAK,EAACC,QAAS3D,KAAK4D,gBAA1D,gBAKR,6BACA,6BACA,kC,GAjOO1E,a,eCkBR2E,E,uKAlBX,OACI,kBAAC,IAAD,KACI,kBAACnF,EAAA,EAAD,CAAQG,GAAG,OAAOD,QAAQ,OAAOD,OAAO,MACpC,kBAACD,EAAA,EAAOM,MAAR,CAAc8E,OAAK,EAACC,KAAK,MAAzB,MACA,kBAACrF,EAAA,EAAOsF,OAAR,CAAeC,gBAAc,qBAC7B,kBAACvF,EAAA,EAAOwF,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKnF,UAAU,WACf,kBAACmF,EAAA,EAAIC,KAAL,CAAUN,KAAK,cAAf,YACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,gBAAf,sB,GAXC7E,a,QC2BNoF,E,uKAjBX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAEA,kBAAC,IAAD,CAAOR,OAAK,EAACS,KAAK,IAAIC,UAAWrF,IACjC,kBAAC,IAAD,CAAOoF,KAAK,YAAYC,UAAWlD,IACnC,kBAAC,IAAD,CAAOiD,KAAK,cAAcC,UAAWpF,KAGvC,kBAAC,EAAD,CAAQ+E,GAAG,gB,GAbDjF,a,MCLlBuF,IAASC,OAAO,kBAAE,EAAF,MAAUC,SAASC,eAAe,W","file":"static/js/main.ded3e1a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\n\nclass Footer extends Component {\n    render() {\n        var getDate = new Date();\n        var getYear = getDate.getFullYear();\n\n        return (\n            <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\" fixed=\"bottom\">\n                <Container>\n                    <Navbar.Brand className='m-auto'>\n                        Andrew Soden &#169; {getYear}\n                    </Navbar.Brand>\n                </Container>\n            </Navbar>\n        );\n    }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport Container from 'react-bootstrap/Container';\n\nclass Home extends Component {\n    render() {\n\n        return (\n            <Container>\n                <h2>Home</h2>\n            </Container>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport { Button } from 'react-bootstrap';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport './App.css';\n\nclass Palindrome extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            enteredWord: \"\",\n            originalWord: \"\",\n            reverseWord: \"\",\n            displayResult: false,\n            isPalindrome: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({ enteredWord: event.target.value });\n    }\n\n    checkPhrase(enteredWord) {\n        var originalWord = enteredWord;\n        var reverseWord = enteredWord.split(\"\").reverse().join(\"\");\n\n        if (reverseWord === originalWord)\n        {\n            this.setState({ isPalindrome: true });\n            this.setState({ displayResult: true });\n        }\n        else \n        {\n            this.setState({ isPalindrome: false });\n            this.setState({ displayResult: true });\n        }\n    }\n\n    handleSubmit(event) {\n        this.checkPhrase(this.state.enteredWord);\n        this.setState({ enteredWord: \"\" });\n        event.preventDefault();\n    }\n\n    render() {\n\n        return (\n            <Jumbotron>\n                <h1>Palindrome Checker</h1>\n                <p>\n                    A palindrome is the same word forward and backwards\n                    <br />Enter a single word below and let us check to see if it is a palindrome\n                    <br />Do not use spaces, numbers of special characters or else it will not work\n                </p>\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formPalindrome\">\n                        <Form.Control\n                            type=\"text\"\n                            placeholder=\"Enter a word\"\n                            value={this.state.enteredWord}\n                            onChange={this.handleChange}\n                            pattern=\"[a-zA-Z]+\"\n                        />\n                        <br />\n                        <Button variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <br />\n                        <br />\n\n                        {this.state.isPalindrome === true && this.state.displayResult === true &&\n                            < Row className=\"resultIsPalindrome\">\n                                <Col>Nice work - that is a palindrome</Col>\n                            </Row>\n                        }\n\n                        {this.state.isPalindrome === false && this.state.displayResult === true &&\n                            <Row className=\"resultNotPalindrome\">\n                                <Col>Oops - that is not a palindrome</Col>\n                            </Row>\n                        }\n\n                    </Form.Group>\n                </Form>\n            </Jumbotron >\n        );\n    }\n}\n\nexport default Palindrome;","import React, { Component } from 'react';\n\nimport { Button, Col } from 'react-bootstrap';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\n\nimport \"./App.css\";\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstLastName: '',\n            phoneNumber: '',\n            email: '',\n            address1: '',\n            address2: '',\n            city: '',\n            ausState: 'NSW',\n            color: '',\n            zip: '',\n            radioPet: '',\n            coffeeCheckbox: false,\n        };\n        this.baseState = this.state;\n    }\n\n    resetToTop() {\n        window.scrollTo(0, 0);\n    }\n\n    onChangeHandler = (event) => {\n        let nam = event.target.name;\n        let val = event.target.value;\n        this.setState({ [nam]: val });\n    }\n\n    onCheckboxHandler = () => {\n        this.setState({\n            coffeeCheckbox: !this.state.coffeeCheckbox\n        });\n    }\n\n    onRadioHandler = nr => () => {\n        this.setState({\n            radioPet: nr\n        });\n    }\n\n    onSelectionHandler = (event) => {\n        this.setState({ ausState: event.target.value });\n    }\n\n    onSubmitHandler = (event) => {\n        alert('Form submitted - have a great day');\n        this.setState(this.baseState);\n        this.resetToTop();\n        event.preventDefault();\n    }\n\n    render() {\n\n        return (\n            <Container className=\"center-col\">\n                <br />\n                <h2>Register</h2>\n                <br />\n                <Form onSubmit={this.onSubmitHandler}>\n                    <Form.Group controlId=\"formFullName\">\n                        <Form.Label>Full Name</Form.Label>\n                        <Form.Control\n                            autoFocus\n                            type=\"text\"\n                            placeholder=\"First and Last Name\"\n                            name=\"firstLastName\"\n                            value={this.state.firstLastName}\n                            onChange={this.onChangeHandler}\n                            maxLength={50}\n                            required\n                        />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formPhoneNumber\">\n                            <Form.Label>Phone Number</Form.Label>\n                            <Form.Control\n                                type=\"tel\"\n                                pattern=\"[0-9]{10}\"\n                                maxLength={10}\n                                placeholder=\"Phone Number\"\n                                name=\"phoneNumber\"\n                                value={this.state.phoneNumber}\n                                onChange={this.onChangeHandler}\n                                required\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                placeholder=\"Email Address\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.onChangeHandler}\n                                maxLength={50}\n                                required\n                            />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Group controlId=\"formAddress1\">\n                        <Form.Label>Address 1</Form.Label>\n                        <Form.Control\n                            placeholder=\"Address 1\"\n                            name=\"address1\"\n                            value={this.state.address1}\n                            onChange={this.onChangeHandler}\n                            maxLength={50}\n                            required\n                        />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formAddress2\">\n                        <Form.Label>Address 2</Form.Label>\n                        <Form.Control\n                            placeholder=\"Address 2\"\n                            name=\"address2\"\n                            value={this.state.address2}\n                            onChange={this.onChangeHandler}\n                            maxLength={50}\n                        />\n                    </Form.Group>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"formCity\">\n                            <Form.Label>City</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"City\"\n                                name=\"city\"\n                                value={this.state.city}\n                                onChange={this.onChangeHandler}\n                                required\n                            />\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formState\">\n                            <Form.Label>State</Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                value={this.state.ausState}\n                                onChange={this.onSelectionHandler}\n                                required\n                            >\n                                <option value=\"NSW\">NSW</option>\n                                <option value=\"QLD\">QLD</option>\n                                <option value=\"SA\">SA</option>\n                                <option value=\"TAS\">TAS</option>\n                                <option value=\"VIC\">VIC</option>\n                                <option value=\"WA\">WA</option>\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group as={Col} controlId=\"formZip\">\n                            <Form.Label>Zip</Form.Label>\n                            <Form.Control\n                                type=\"tel\"\n                                pattern=\"[0-9]{4}\"\n                                maxLength={4}\n                                placeholder=\"Zip\"\n                                name=\"zip\"\n                                value={this.state.zip}\n                                onChange={this.onChangeHandler}\n                                required\n                            />\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Label>Are You a Cat or Dogs Person?</Form.Label>\n                        <div className=\"mb-3\">\n                            <Form.Check\n                                inline\n                                label=\"Cats\"\n                                type=\"radio\"\n                                checked={this.state.radioPet === 1 ? true : false}\n                                onChange={this.onRadioHandler(1)}\n                            />\n                            <Form.Check\n                                inline\n                                label=\"Dogs\"\n                                type=\"radio\"\n                                checked={this.state.radioPet === 2 ? true : false}\n                                onChange={this.onRadioHandler(2)}\n                            />\n                            <Form.Check\n                                inline\n                                label=\"Both\"\n                                type=\"radio\"\n                                checked={this.state.radioPet === 3 ? true : false}\n                                onChange={this.onRadioHandler(3)}\n                            />\n                            <Form.Check\n                                inline\n                                label=\"Neither\"\n                                type=\"radio\"\n                                checked={this.state.radioPet === 4 ? true : false}\n                                onChange={this.onRadioHandler(4)}\n                            />\n                        </div>\n                    </Form.Row>\n\n                    <Form.Group>\n                        <Form.Check\n                            label=\"Do you love coffee?\"\n                            name=\"coffeeCheckbox\"\n                            checked={this.state.coffeeCheckbox}\n                            onChange={this.onCheckboxHandler}\n                        />\n                    </Form.Group>\n\n                    <>\n                        <Button variant=\"primary\" size=\"lg\" block type=\"submit\">\n                            Submit\n                        </Button>\n                        <Button variant=\"secondary\" size=\"lg\" block onClick={this.onResetHandler}>\n                            Clear Form\n                        </Button>\n                    </>\n                </Form>\n                <br />\n                <br />\n                <br />\n            </Container >\n        );\n    }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nclass Header extends Component {    \n    render() {\n\n    return(\n        <MemoryRouter>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n                <Navbar.Brand exact href=\"#/\">AS</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"#/register\">Register</Nav.Link>\n                    <Nav.Link href=\"#/palindrome\">Palindrome</Nav.Link>\n                    </Nav>\n                    \n                </Navbar.Collapse>\n            </Navbar>\n        </MemoryRouter>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nimport Footer from './Footer';\nimport Home from './Home';\nimport Palindrome from './Palindrome';\nimport Register from './Register';\nimport Header from './Header';\n\nimport { HashRouter, Route } from 'react-router-dom';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n\n    return (\n      <div>\n        <HashRouter>\n          <Header />\n\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/palindrome\" component={Palindrome} />\n        </HashRouter>\n\n        <Footer id=\"footer\" />\n      </div>\n    );\n  }\n}\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(< App />, document.getElementById('root'));"],"sourceRoot":""}